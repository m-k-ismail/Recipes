openapi: 3.0.3
info:
  title: Recipe API
  description: Component file dedicated to all operations related to the product Recipe API
  version: 1.0.0
servers:
  - url: 'https://localhost:8080/v1'
paths:
  /recipe:
    get:
      tags:
        - Recipe
      summary:
        Searches for Recipe(s)
      operationId: getRecipes
      parameters:
        - in: query
          name: numberOfServings
          schema:
            type: integer
            format: int32
        - in: query
          name: type
          schema:
            type: string
            enum:
              - VEGETARIAN
              - NON_VEGETARIAN
        - in: query
          name: includedIngredient
          schema:
            type: array
            uniqueItems: true
            items:
              type: string
        - in: query
          name: excludedIngredient
          schema:
            type: array
            uniqueItems: true
            items:
              type: string
        - in: query
          name: freeText
          schema:
            type: string
        - in: query
          name: pageLimit
          schema:
            type: integer
            format: int32
            minimum: 1
            default: 20
        - in: query
          name: pageOffset
          schema:
            type: integer
            format: int32
            minimum: 0
            default: 0
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'
        "204":
          description: "Not Content"
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Recipe
      summary:
        Creates and stores a new Recipe
      operationId: createRecipe
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recipe'
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /recipe/{id}:
    get:
      tags:
        - Recipe
      summary:
        Retrieves a Recipe By ID
      operationId: getRecipe
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: "Recipe ID"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - Recipe
      summary:
        Modify a Recipe By ID
      operationId: updateRecipe
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recipe'
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: "Recipe ID"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - Recipe
      summary:
        Delete a Recipe By ID
      operationId: deleteRecipe
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: "Recipe ID"
      responses:
        "204":
          description: "Not Content"
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Recipe:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier of the resource 'Recipe'.
        title:
          type: string
          description: Title of the recipe.
        type:
          type: string
          description: Type of the recipe.
          enum:
            - VEGETARIAN
            - NON-VEGETARIAN
        createdAt:
          type: string
          format: date
          description: The date of when the recipe was created in the system.
        numberOfServings:
          type: integer
          format: int32
          description: The number of servings that a recipe can do.
        instructions:
          type: string
          description: A free text of the instruction that the user needs to follow to create a recipe.
        ingredients:
          type: array
          description: A list of ingredients for a recipe.
          items:
            $ref: '#/components/schemas/ingredient'
    Ingredient:
      type: object
      properties:
        name:
          type: string
          description: Name of the ingredient.
        quantity:
          type: integer
          format: int32
          description: The quantity that is needed for an ingredient.
    Error:
      type: object
      properties:
        code:
          type: integer
          format: int32
          description: A unique error code
        message:
          type: string
          description: An error message that describes the error that occurred